name: CI

on:
  push:
    branches: [ master ]
    tags: [ '*' ]
  pull_request:
  schedule:
    - cron: '30 2 */10 * *'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build ISO

    container:
      image: debian:latest
      volumes:
        - /proc:/proc
      options: --privileged

    steps:
      - uses: actions/checkout@v4

      - name: Set environment variables
        run: |
          echo REPO=$(pwd) >> ${GITHUB_ENV}
          echo LB=$(pwd)/live-build >> ${GITHUB_ENV}

      - name: Install dependencies
        run: |
          apt-get update
          apt-get install -y live-build make build-essential wget git unzip colordiff apt-transport-https rename ovmf rsync python3-venv gnupg

      - name: Create live-build directory structure
        run: |
          mkdir ${LB}
          mkdir ${LB}/auto
          mkdir ${LB}/config
          cd ${LB}

      - name: Adjust live-build configuration
        run: |
          cp -vr ${REPO}/auto/* ${LB}/auto/
          cp -vr ${REPO}/config/* ${LB}/config/
          cp -vr /etc/ssl ${LB}/config/includes.chroot/etc/ssl

      - name: Extra Packages
        run: |
          mkdir -p ${LB}/cache/downloads/ ${LB}/config/packages.chroot/
          wget https://cdn.akamai.steamstatic.com/client/installer/steam.deb \
            -O ${LB}/config/packages.chroot/steam.deb

      - name: Restore cache
        uses: actions/cache/restore@v4
        with:
          path: ${{ env.LB }}/cache/packages*
          key: packages-cache

      - name: Building
        run: |
          cd ${LB}
          lb clean --all
          lb config
          lb build

      - name: Save cache
        uses: actions/cache/save@v4
        with:
          path: ${{ env.LB }}/cache/packages*
          key: packages-cache

      - name: Uploading ISO 
        uses: actions/upload-artifact@v4
        with:
          name: debian-amd64.iso
          path: ${{ env.LB }}/live-image-amd64.hybrid.iso
          if-no-files-found: error

      - name: Mount ISO to extract required files (filesystem.squashfs, vmlinuz, initrd.img)
        run: |
          mkdir ${LB}/tmp/
          mount -o loop ${LB}/live-image-amd64.hybrid.iso ${LB}/tmp

      - name: Uploading vmlinuz
        uses: actions/upload-artifact@v4
        with:
          name: vmlinuz
          path: |
            ${{ env.LB }}/tmp/live/vmlinuz
          if-no-files-found: error

      - name: Uploading initrd.img
        uses: actions/upload-artifact@v4
        with:
          name: initrd.img
          path: |
            ${{ env.LB }}/tmp/live/initrd.img
          if-no-files-found: error

      - name: Uploading filesystem.squashfs
        uses: actions/upload-artifact@v4
        with:
          name: filesystem.squashfs
          path: |
            ${{ env.LB }}/tmp/live/filesystem.squashfs
          if-no-files-found: error

      - name: Cleanup
        if: always()
        run: |
          cd ${LB}
          lb clean --all
          rm -rvf config/packages.chroot/
          rm -rf .venv/
          lb clean --purge
          rm -rvf cache/downloads/
          rm -rf iso/